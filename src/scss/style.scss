//==============================================================================================================================================================
@use "sass:math";

// Подключение миксинов =============================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов =============================================================================================================================================================================
// &display=swap - добавить при подключении через плагин
@import url(https://fonts.googleapis.com/css?family=Montserrat:500,600,700,&display=swap);

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов =============================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию =============================================================================================================================================================================
$font-family: "Montserrat";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию
$mainDarkColor: #141414;
$mainOrange: #e8aa31;

// Настройки =============================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1590;
// Общий отступ от контейнера
// (30 = по 15px слева и справа, 0 = нет оступа)
$containerPadding: 30;

//Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейпоинтов)
// 0 = по брейк-поинтам  (контейнер меняет свою ширину по брей-поинтам)
$responsiveType: 1;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк поинты
$pc: em($containerWidth); // пк, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры =============================================================================================================================================================================
@import "base/null";

body {
  font-weight: 500;
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
}
// Оболочка =============================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // Сайт загружен
  // .loaded &{
  // }
  // Прижимаем Footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}
// Ограничивающий контейнер =============================================================================================================================================================================
/*
(i) Стили будут применяться ко
всем классам содержащим *__container
*/
@if ($responsiveType == 1) {
  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // По брейк поинтам
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

//Подключение базовых стилей, шаблонов (заготовок) и вспомогательных классов
//Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключения стилей общих элементов проекта
@import "common";

// Подключения стилей отдельных блоков
@import "header";
@import "footer";

// Подключения стилей отдельных страниц
@import "home";
@import "catalog";
@import "product";

.page {
  // .page_home

  &_index {
  }

  // .page_inner

  &_inner {
    padding-top: rem(30);
  }
  &__header {
    margin-bottom: rem(30);
  }

  // .page__main-block

  &__main-block {
  }

  // .page__catalog-cards

  &__catalog-cards {
  }

  // .page__article-module

  &__article-module {
  }

  // .page__products-block

  &__products-block {
  }
}
